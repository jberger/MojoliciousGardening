<style>
  .reveal pre code { padding: 20px }
  code.hljs.inline {
    display: initial;
    font-size: 80%;
    margin: 0 10px 0 10px;
  }
</style>

<section>

  <h1>Mojolicious Gardening</h1>

  <p>
    <a href="http://mojolicio.us" target="_blank"><img height="200px" src="unicorn_gnome.jpg"></a>
  </p>

</section>

<section>

  <h2>About this talk</h2>

  <ul>
    <li>I first gave this talk at MojoConf September 2018</li>
    <li>The talk is hosted at <a href="http://jberger.github.io/MojoliciousGardening" target="_blank">http://jberger.github.io/MojoliciousGardening</a></li>
    <li>The source is available at <a href="https://github.com/jberger/MojoliciousGardening" target="_blank">https://github.com/jberger/MojoliciousGardening</a></li>
    <!--li>All code samples and all tests:
      <ul>
        <li>are complete and run as shown</li>
        <li>are included in the repository</li>
      </ul>
    </li-->
  </ul>

</section>

%= markdown_section begin
  ## Don't Fear the Full App!

  Lite is just a thin wrapper
% end

%= markdown_section begin
  ## Get Help

  - [Growing Guide](http://mojolicious.org/perldoc/Mojolicious/Guides/Growing)
  - [`inflate` Command](http://mojolicious.org/perldoc/Mojolicious/Command/inflate)
% end

%= markdown_section begin
  ## The Script

% end

%= markdown_section begin
  ## App Keywords

  - app
  - helper
  - hook
  - plugin

% end

%= markdown_section begin
  ## Routing Keywords

  - any
  - del (as delete)
  - get
  - options
  - patch
  - post
  - put
  - websocket

% end

%= markdown_section begin
  ## Nested routing

  - under
  - group

% end

%= markdown_section begin
  ## Supporting Files

  - templates
  - static files

% end

<section>

  <section>
    <h2>Pushpin Application</h2>

    %= include_code 'ex/lite/pushpin.pl'
  </section>

  <section>
    %= include_code 'ex/lite/pushpin.pl' => section => 'config'
  </section>

  <section>
    %= include_code 'ex/lite/pushpin.pl' => section => 'sqlite'
  </section>

  <section>
    %= include_code 'ex/lite/pushpin.pl' => section => 'helpers'
  </section>

  <section>
    %= include_code 'ex/lite/pushpin.pl' => section => 'routes_pins'
  </section>

  <section>
    %= include_code 'ex/lite/pushpin.pl' => section => 'routes_admin'
  </section>

  <section>
    %= include_code 'ex/lite/pushpin.pl' => section => 'routes_final'
  </section>

  %= markdown_section begin
    ## `__DATA__` Files

    - pushpin.js
    - map.html.ep
    - table.html.ep
    - layouts/main.html.ep
    - migrations
  % end
</section>

<section>
  %= markdown_section begin
    ## Before The Move

    ### The Lite-Hybrid App
  % end

  %= markdown_section begin
    ## Purpose

    - Transition away from the DSL
    - Prepare for moving to Full
  % end

  <section>
    %= include_code 'ex/lite-hybrid/pushpin.pl' => section => 'app', include_filename => 0
    %= include_code 'ex/lite-hybrid/pushpin.pl' => section => 'router'
  </section>

  <section>
    <h3> Helper keyword ...</h3>
    %= include_code 'ex/lite/pushpin.pl' => section => 'helpers'
  </section>
  <section>
    <h3>... becomes helper method</h3>
    %= include_code 'ex/lite-hybrid/pushpin.pl' => section => 'helpers'
  </section>

  <!-- TODO: mention hybrid routes taking same arguments as keyword form -->
  <section>
    <h3>And toplevel routes ...</h3>
    %= include_code 'ex/lite/pushpin.pl' => section => 'routes_pins', include_filename => 0
    %= include_code 'ex/lite/pushpin.pl' => section => 'routes_final'
  </section>
  <section>
    <h3>... are created by router methods</h3>
    %= include_code 'ex/lite-hybrid/pushpin.pl' => section => 'routes_pins', include_filename => 0
    %= include_code 'ex/lite-hybrid/pushpin.pl' => section => 'routes_final'
  </section>
</section>

<section>
  %= markdown_section begin
    ## Nested Routing

    - routes are a tree
    - routing keywords (except under/group)
      * add routes to the current router
      * are all "leaf nodes"
  % end
  %= markdown_section begin
    ## Nested Routing

    - `under`
      * replaces the current router
      * creates an "inner node"
      * conditionally stops router
  % end
  <section>
    <img src="router_lite.svg">
  </section>
  <section>
    <img src="router_lite_question.svg">
  </section>
  %= markdown_section begin
    ## Nested Routing

    - `group`
      * localizes the effect of `under`
      * a sign that it is time for hybrid routing
  % end
  <section>
    <img src="router_lite_group.svg">
  </section>
  %= markdown_section begin
    ## Object Tree Routing

    - routes build off others
    - now `under` is just an "inner node with conditions"
    - use `any` for an "inner node" without them
  % end
  <section>
    <img src="router_full.svg">
  </section>
  <section>
    <h3>The Grouped Lite Routes Become ...</h3>
    %= include_code 'ex/lite/pushpin.pl' => section => 'routes_admin'
  </section>
  <section>
    <h3>... A Proper Object Tree</h3>
    %= include_code 'ex/lite-hybrid/pushpin.pl' => section => 'routes_admin'
  </section>
</section>
